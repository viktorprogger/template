version: 2.6

silent: false

vars:
  DOCKER_REGISTRY:
    sh: grep "DOCKER_REGISTRY" .env | cut -d = -f 2
  APP_NAME:
    sh: grep "APP_NAME" .env | cut -d = -f 2
  YII_ENV:
    sh: grep "YII_ENV" .env | cut -d = -f 2
  APP_NAME_FULL:
    sh: echo '{{if .DOCKER_REGISTRY}}{{.DOCKER_REGISTRY}}/{{.APP_NAME}}{{else}}{{.APP_NAME}}{{end}}'
  BRANCH_DEFAULT: master
  BRANCH_CURRENT:
    sh: git branch | grep '\*' | cut -d ' ' -f2 | sed 's/\//-/g' | tr '[:upper:]' '[:lower:]'

tasks:
  docker:login:
    cmds:
      - docker login {{.DOCKER_REGISTRY}}

  docker:pull:
    depends: [docker:login]
    cmds:
      - docker pull {{.APP_NAME_FULL}}:{{.BRANCH_CURRENT}}

  docker:build:
    cmds:
      - docker build -t {{.APP_NAME_FULL}}:{{.BRANCH_CURRENT}} -f .docker/php/Dockerfile ./src
      - if test "{{.BRANCH_CURRENT}}" = "{{.BRANCH_DEFAULT}}";
          then docker tag {{.APP_NAME_FULL}}:{{.BRANCH_CURRENT}} {{.APP_NAME_FULL}}:latest;
        fi

  docker:tag:
    vars:
      TAGS:
        sh: git tag --points-at HEAD
    cmds:
      - for a_tag in {{.TAGS}} ; do
          echo "Tagging image '{{.APP_NAME}}' with tag '$$a_tag'";
          docker tag {{.APP_NAME_FULL}}:{{.BRANCH_CURRENT}} {{.APP_NAME}}:$$a_tag ;
        done

  docker:push:
    depends: [docker:login]
    cmds:
      - docker push {{.APP_NAME_FULL}}

  publish:
    cmds:
      - task: docker:build
      - task: docker:tag
      - task: docker:push

  up:
    env:
      BUILD_TAG:
        sh: echo {{.BRANCH_CURRENT}}
      USER_ID:
        sh: id -u
      GROUP_ID:
        sh: id -g
    cmds:
      - task: docker:pull
      - docker-compose up -d --remove-orphans
    status:
      - docker-compose exec -T php echo ''

  down:
    cmds:
      - docker-compose down

  php:restart:
    cmds:
      - docker-compose restart php

  php:server:
    deps: [up]
    cmds:
      - docker-compose exec -d php php -S localhost:8080 -t api/web/

  php:behat:
    deps: [php:server, yii:migrate:fresh]
    cmds:
      - docker-compose exec php php vendor/bin/behat

  php:test:
    cmds:
      - task: php:behat
        ignore_error: true
      - task: down

  php:exec:
    deps: [up]
    cmds:
      - docker-compose exec php {{.c}}

  php:run:
    cmds:
      - docker-compose run --rm php {{.c}}

  php:yii:
    cmds:
      - task: php:exec
        vars:
          c: php ./yii {{if .c}}{{.c}}{{end}}

  yii:migrate:
    cmds:
      - task: php:yii
        vars:
          c: migrate --interactive=0

  yii:migrate:fresh:
    cmds:
      - task: php:yii
        vars:
          c: migrate/fresh --interactive=0

  composer:install:
    cmds:
      - task: php:run
        vars:
          c: composer install

  composer:update:
    cmds:
      - task: php:run
        vars:
          c: composer update

  composer:require:
    cmds:
      - task: php:exec
        vars:
          c: composer require {{.c}}

  composer:remove:
    cmds:
      - task: php:exec
        vars:
          c: composer remove {{.c}}
